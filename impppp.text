    # Use an official Golang runtime as a parent image
    FROM golang:latest

    # Set the working directory to /go/src/app
    WORKDIR /go/src/app

    # Copy the Go module files
    COPY go.mod go.sum ./

    # Download and install the dependencies
    RUN go mod download

    # Copy the current directory contents into the container at /go/src/app
    COPY . .

    # Set the working directory to the location of the main.go file
    WORKDIR /go/src/app/cmd/api

    # Copy the current directory contents into the container at /go/src/app
    COPY . .

    # Compile the application
    RUN go build -o app

    # Expose the port on which the application will run
    EXPOSE 8000

    # Set the default command to run when starting the container
    CMD ["./app"]

    ssh -i "microkey.pem" ubuntu@ec2-65-2-169-235.ap-south-1.compute.amazonaws.com
Welcome to Ubuntu 22.04.2 LTS (GNU/Linux 5.19.0-1025-aws x86_64)


    # Use an official Golang runtime as a parent image
    FROM golang:latest

    # Set the working directory to /go/src/app
    WORKDIR /go/src/app

    # Copy the Go module files
    COPY go.mod go.sum ./

    # Download and install the dependencies
    RUN go mod download

    # Copy the current directory contents into the container at /go/src/app
    COPY . .

    # Set the working directory to the location of the main.go file
    WORKDIR /go/src/app/cmd/api

    # Copy the current directory contents into the container at /go/src/app
    COPY . .

    # Compile the application
    RUN go build -o app

    # Expose the port on which the application will run
    EXPOSE 8000

    # Set the default command to run when starting the container
    CMD ["./app"]



////////////////////////////////////////////////////////////////////
# Use an official Golang runtime as a parent image
FROM golang:latest

# Set the working directory to /go/src/app
WORKDIR /go/src/app

# Copy the Go module files
COPY go.mod go.sum ./

# Download and install the dependencies
RUN go mod download

# Copy the entire directory to the working directory in the container
COPY . .

# Compile the application
RUN go build -o app ./cmd/api

# Expose the port on which the application will run
EXPOSE 8000

# Set the default command to run when starting the container
CMD ["./app"]

//////////////////////////////////////////////////

# Stage 1: Build the Go application
FROM golang:latest AS builder

WORKDIR /go/src/app

COPY go.mod go.sum ./
RUN go mod download

COPY . .
RUN go build -o app ./cmd/api

# Stage 2: Create a minimal image to run the application
FROM golang:alpine

WORKDIR /app
COPY --from=builder /go/src/app/app .

EXPOSE 8000
CMD ["./app"]